{"version":3,"sources":["components/FieldItem/index..module.scss","components/LibraryItem/index.module.scss","images/person.png","components/FieldList/index.module.scss","components/ImageBlock/index.module.scss","images/planet.png","images/starship.png","components/Header/index.js","components/Header/Header.js","components/SearchBar/index.js","components/SearchBar/SearchBar.js","lib/services/swService.js","components/Loader/index.js","components/Loader/Loader.js","components/LibraryRoot/index.js","components/LibraryRoot/LibraryRoot.js","components/LibraryList/LibraryList.js","components/LibraryList/index.js","components/FieldItem/index.js","components/FieldItem/FieldItem.js","components/FieldList/index.js","components/FieldList/FieldList.js","components/ImageBlock/index.js","components/ImageBlock/ImageBlock.js","components/LibraryItem/index.js","components/LibraryItem/LibraryItem.js","components/Page404/index.js","components/Page404/Page404.js","components/Home/index.js","components/Home/Home.js","components/Main/Main.js","components/Main/index.js","components/App/index.js","components/App/App.js","index.js"],"names":["module","exports","Header","className","to","exact","SearchBar","type","defaultPersonImg","require","defaultPlanetImg","defaultStarshipImg","SWService","SW_BASE_URL","PERSON_IMG_URL","PLANET_IMG_URL","STARSHIP_IMG_URL","SW_CATEGORIES","people","data","modifyPerson","planets","modifyPlanet","starships","modifyStarship","stringWithId","match","baseUrl","id","personData","url","imageUrl","defaultImageUrl","default","name","info","title","value","gender","birth_year","height","mass","planetData","rotation_period","climate","terrain","population","starshipData","model","length","passengers","hyperdrive_rating","getData","options","a","fetch","signal","res","json","getItemData","category","ctrl","getListData","results","map","Loader","LibraryRoot","state","loadedData","isLoading","isError","_fetchController","startLoading","setState","handleSucces","handleError","e","console","log","getLibraryData","dataUrl","categoryType","abort","AbortController","props","then","catch","this","params","nextProps","nextContext","prevProps","prevState","snapshot","Component","component","LibraryList","dataView","person","withRouter","FieldItem","fieldItem","classList","classNames","styles","field","cell","FieldList","fieldList","item","ImageBlock","status","blob","Error","URL","createObjectURL","defaultUrl","image","src","alt","LibraryItem","imageContainer","Page404","Home","sw","Main","path","render","App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.ffa85b83.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"field\":\"index__field__1yLuk\",\"cell\":\"index__cell__2mWZ7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"LibraryItem_item__caTgO\",\"title\":\"LibraryItem_title__3wyVI\",\"imageContainer\":\"LibraryItem_imageContainer__3gzaU\",\"image\":\"LibraryItem_image__2YdyY\"};","export default __webpack_public_path__ + \"static/media/person.35f6be26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fieldItem\":\"FieldList_fieldItem__3rjlT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"image\":\"ImageBlock_image__2slNy\"};","export default __webpack_public_path__ + \"static/media/planet.252fd78b.png\";","export default __webpack_public_path__ + \"static/media/starship.5a581eb4.png\";","import Header from \"./Header\";\n\nexport default Header;","import React from 'react';\nimport { NavLink } from \"react-router-dom\";\nimport './header.scss';\n\nconst Header = () => (\n    <header className=\"header\">\n        <div className=\"header__logo\"></div>\n        <nav className=\"header__nav nav\">\n            <ul className=\"nav__list\">\n                <li className=\"nav__item\"><NavLink className=\"nav__link\" to=\"/\" exact>Home</NavLink></li>\n                <li className=\"nav__item\"><NavLink className=\"nav__link\" to=\"/people\">People</NavLink></li>\n                <li className=\"nav__item\"><NavLink className=\"nav__link\" to=\"/planets\">Planets</NavLink></li>\n                <li className=\"nav__item\"><NavLink className=\"nav__link\" to=\"/starships\">Starships</NavLink></li>\n            </ul>\n        </nav>\n    </header>\n);\n\nexport default Header;","import SearchBar from \"./SearchBar\";\n\nexport default SearchBar;","import React from 'react';\nimport './searchBar.scss';\n\nconst SearchBar = () => {\n    return (\n        <div className=\"searchBar\">\n            <input type=\"text\" className=\"searchBar__input\"/>\n        </div>\n    );\n};\n\nexport default SearchBar;","const defaultPersonImg = require('../../images/person.png');\nconst defaultPlanetImg = require('../../images/planet.png');\nconst defaultStarshipImg = require('../../images/starship.png');\n\nclass SWService {\n    #idTemplate = /\\/([0-9]+)\\//;\n    SW_BASE_URL = 'https://swapi.dev/api';\n    PERSON_IMG_URL = 'https://starwars-visualguide.com/assets/img/characters/';\n    PLANET_IMG_URL = 'https://starwars-visualguide.com/assets/img/planets/';\n    STARSHIP_IMG_URL = 'https://starwars-visualguide.com/assets/img/starships/';\n    SW_CATEGORIES = {\n        people: (data) => this.modifyPerson(data),\n        planets: (data) => this.modifyPlanet(data),\n        starships: (data) => this.modifyStarship(data),\n    };\n\n\n    #getItemId = (stringWithId) => {\n        return stringWithId.match(this.#idTemplate)[1];\n    };\n\n    #getImageUrl = (baseUrl, id) => baseUrl + id + '.jpg';\n\n    modifyPerson = (personData) => {\n        const id = this.#getItemId(personData.url);\n        const imageUrl = this.#getImageUrl(this.PERSON_IMG_URL, id);\n        const defaultImageUrl = defaultPersonImg.default;\n\n        return {\n            id,\n            imageUrl,\n            defaultImageUrl,\n            name: personData.name,\n            info: [\n                {id: 1, title: 'Name', value: personData.name},\n                {id: 2, title: 'Gender', value: personData.gender},\n                {id: 3, title: 'Year of birth', value: personData.birth_year},\n                {id: 4, title: 'Height', value: personData.height},\n                {id: 5, title: 'Mass', value: personData.mass},\n            ],\n        }\n    };\n\n    modifyPlanet = (planetData) => {\n        const id = this.#getItemId(planetData.url);\n        const imageUrl = this.#getImageUrl(this.PLANET_IMG_URL, id);\n        const defaultImageUrl = defaultPlanetImg.default;\n\n        return {\n            id,\n            imageUrl,\n            defaultImageUrl,\n            name: planetData.name,\n            info: [\n                {id: 1, title: 'Name', value: planetData.name},\n                {id: 2, title: 'Rotation period', value: planetData.rotation_period},\n                {id: 3, title: 'Climate', value: planetData.climate},\n                {id: 4, title: 'Terrain', value: planetData.terrain},\n                {id: 5, title: 'Population', value: planetData.population},\n            ]\n        }\n    };\n\n    modifyStarship = (starshipData) => {\n        const id = this.#getItemId(starshipData.url);\n        const imageUrl = this.#getImageUrl(this.STARSHIP_IMG_URL, id);\n        const defaultImageUrl = defaultStarshipImg.default;\n\n        return {\n            id,\n            imageUrl,\n            defaultImageUrl,\n            name: starshipData.name,\n            info: [\n                {id: 1, title: 'Name', value: starshipData.name},\n                {id: 2, title: 'Model', value: starshipData.model},\n                {id: 3, title: 'Length', value: starshipData.length},\n                {id: 4, title: 'Passengers', value: starshipData.passengers},\n                {id: 5, title: 'HyperDrive rating', value: starshipData.hyperdrive_rating},\n            ]\n        }\n    };\n\n    getData = async (url, options) => {\n        const res = await fetch(\n            this.SW_BASE_URL + url, {\n                signal: options.signal\n            });\n\n        return await res.json();\n    };\n\n    getItemData = async (url, category, ctrl) => {\n        const data = await this.getData(url, ctrl);\n\n        return this.SW_CATEGORIES[category](data);\n    };\n\n    getListData = async (url, category, ctrl) => {\n        const data = await this.getData(url, ctrl);\n\n        return data.results.map(this.SW_CATEGORIES[category])\n    };\n}\n\nexport default SWService;\n","import Loader from \"./Loader\";\n\nexport default Loader;","import React from 'react';\nimport './loader.scss';\n\nconst Loader = () => (\n    <div className=\"spinner\">\n       loading...\n    </div>\n);\n\nexport default Loader","import LibraryRoot from \"./LibraryRoot\";\n\nexport default LibraryRoot;","import React, { Component } from 'react';\nimport Loader from \"../Loader\";\n\nclass LibraryRoot extends Component {\n    state = {\n        loadedData: null,\n        isLoading: true,\n        isError: false,\n    };\n\n    _fetchController = null;\n\n    startLoading= () => {\n        this.setState({\n            loadedData: null,\n            isLoading: true,\n            isError: false\n        })\n    };\n\n    handleSucces = (data) => {\n        this.setState({\n            loadedData: data,\n            isLoading: false,\n            isError: false\n        })\n    };\n\n    handleError = (e) => {\n        if (e.name === 'AbortError') {\n            console.log('--- current fetch was aborted ----')\n\n            this.startLoading();\n            return;\n        }\n\n        this.setState({\n            isLoading: false,\n            isError: true,\n        })\n    };\n\n    getLibraryData = (dataUrl, categoryType) => {\n        if( this._fetchController ) {\n            this._fetchController.abort()\n        }\n\n        this._fetchController = new AbortController();\n        console.log('--- new controller was created ---')\n        this.props.getData(\n            dataUrl,\n            categoryType,\n            this._fetchController\n        )\n            .then(this.handleSucces)\n            .catch(this.handleError);\n    };\n\n    componentDidMount() {\n        const { url, params: { category } } = this.props.match;\n        this.getLibraryData(url, category);\n    }\n\n    componentWillReceiveProps(nextProps, nextContext) {\n        if(nextProps.match.url !== this.props.match.url) {\n          this.startLoading();\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.match.url !== this.props.match.url) {\n            const { url, params: { category } } = this.props.match;\n            this.getLibraryData(url, category);\n        }\n    }\n\n    componentWillUnmount() {\n        this._fetchController.abort();\n    }\n\n    render() {\n        const { isLoading, isError, loadedData } = this.state;\n        const {component: Component} = this.props;\n        console.log('render', this.state);\n\n        if (isError) {\n            return <div>error</div>\n        }\n        if (isLoading) {\n            return <Loader/>\n        }\n\n        return <Component data={loadedData}/>;\n    }\n}\n\nexport default LibraryRoot;","import React from 'react';\nimport { Link } from \"react-router-dom\";\n// import PropTypes from 'prop-types';\n\nconst LibraryList = ({ data = [], match }) => {\n    const { url } = match;\n    const dataView = data.map(person => (\n        <li className=\"libraryList__item\" key={ person.id }>\n            <Link className=\"libraryList__link\" to={url + '/' + person.id }>\n                { person.name }\n            </Link>\n        </li>));\n    return (\n        <ul className=\"libraryList\">\n            {\n                dataView.length\n                    ? dataView\n                    : <li className=\"libraryList__item\">no items</li>\n            }\n        </ul>\n    )\n   };\n\nexport default LibraryList;","import {withRouter} from \"react-router\";\nimport LibraryList from \"./LibraryList\";\n\nexport default withRouter(LibraryList);\n","import FieldItem from \"./FieldItem\";\n\nexport default FieldItem;\n","import React from 'react';\n// import PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport styles from './index..module.scss';\n\nconst FieldItem = ({ fieldItem, classList = ''}) => (\n    <li className={classNames(styles.field, classList)}>\n        <span className={styles.cell}>{ fieldItem.title }</span>\n        <span className={styles.cell}>{ fieldItem.value }</span>\n    </li>\n);\n\nexport default FieldItem;\n","import FieldList from \"./FieldList\";\n\nexport default FieldList;","import React from 'react';\n// import PropTypes from 'prop-types';\nimport FieldItem from \"../FieldItem\";\nimport classNames from 'classnames';\nimport styles from \"./index.module.scss\";\n\nconst FieldList = ({ fieldList, classList = ''}) =>(\n    <ul className={classNames(classList)}>\n        {\n            fieldList.map(item => <FieldItem\n                key={item.id}\n                fieldItem={item}\n                classList={styles.fieldItem}\n            />)\n        }\n    </ul>\n);\n\nexport default FieldList;","import ImageBlock from \"./ImageBlock\";\n\nexport default ImageBlock;","import React, { Component } from 'react';\n// import PropTypes from 'prop-types';\nimport Loader from \"../Loader\";\nimport img from '../../images/person.png'\n\nimport styles from './index.module.scss'\n\n\nclass ImageBlock extends Component {\n    state = {\n        isLoading: true,\n        url: null\n    };\n\n    componentDidMount() {\n        fetch(this.props.url)\n            .then(res => {\n                if (res.status <= 300) {\n                    return res.blob();\n                }\n\n                throw new Error()\n            })\n            .then(blob => {\n                const url = URL.createObjectURL(blob);\n                this.setState({\n                    isLoading: false,\n                    url\n                })\n            })\n            .catch(() => {\n                this.setState({\n                    isLoading: false,\n                    url: this.props.defaultUrl,\n                });\n            });\n    }\n\n\n    render() {\n        const { isLoading, url} = this.state;\n\n        if(isLoading) {\n            return <Loader/>\n        }\n\n        return <img className={styles.image} src={url} alt=\"\"/>\n    }\n}\n\nexport default ImageBlock;","import LibraryItem from \"./LibraryItem\";\n\nexport default LibraryItem;","import React from 'react';\n// import PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport FieldList from \"../FieldList\";\nimport ImageBlock from \"../ImageBlock\";\n\nimport styles from './index.module.scss';\n\nconst LibraryItem = ({ data, classList = ''}) => {\n    const { info, name, imageUrl, defaultImageUrl } = data;\n\n    return (\n        <div className={classNames(styles.item, classList)}>\n            <h2 className={styles.title}>{ name }</h2>\n            <div className={styles.imageContainer}>\n                <ImageBlock url={imageUrl} defaultUrl={defaultImageUrl}/>\n            </div>\n            <FieldList fieldList={ info } />\n            <button className=\"backButton\" type=\"button\">&#60;&#60; Back</button>\n        </div>\n    )\n};\n\nexport default LibraryItem;","import Page404 from \"./Page404\";\n\nexport default Page404;\n","import React from 'react';\n// import PropTypes from 'prop-types';\n\nconst Page404 = () => (\n    <div>Page not found</div>\n);\n\nexport default Page404;","import Home from \"./Home\";\n\nexport default Home;","import React from 'react';\n// import PropTypes from 'prop-types';\n\nconst Home = () => (\n    <div>Welcome to StarWars library home page</div>\n);\n\nexport default Home;","import React from 'react';\nimport { Route, Switch } from \"react-router\";\nimport SWService from \"../../lib/services/swService\";\n\nimport LibraryRoot from \"../LibraryRoot\";\nimport LibraryList from \"../LibraryList\";\nimport LibraryItem from \"../LibraryItem\";\n\nimport Page404 from \"../Page404\";\nimport Home from \"../Home\";\n// import PropTypes from 'prop-types';\n\nconst sw = new SWService();\n\nconst Main = () => (\n    <main>\n        <Switch>\n            <Route path='/' exact component={ Home } />\n            <Route\n                exact\n                path='/:category/:id'\n                render={ ({match }) =>\n                    <LibraryRoot\n                        match={match}\n                        getData={sw.getItemData}\n                        component={LibraryItem}\n                    />\n                }/>\n\n            <Route\n                exact\n                path='/:category'\n                render={({match}) =>\n                   <LibraryRoot\n                        match={match}\n                        getData={sw.getListData}\n                        component={LibraryList}\n                   />\n               }/>\n            <Route component={Page404} />\n        </Switch>\n    </main>\n);\n\nexport default Main;","import Main from \"./Main\";\n\nexport default Main;","import App from \"./App\";\n\nexport default App;","import React from 'react';\n\nimport Header from \"../Header\";\nimport SearchBar from \"../SearchBar\";\nimport Main from \"../Main\";\n\nimport './app.scss';\n\n\nconst App  = () => {\n    return (\n        <div className=\"app\">\n            <Header/>\n            <SearchBar/>\n            <Main/>\n        </div>\n    )\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from \"react-router-dom\";\nimport App from './components/App';\nimport './index.scss';\n\nReactDOM.render(\n    <HashRouter>\n        <App />\n    </HashRouter>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}