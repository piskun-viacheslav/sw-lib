{"version":3,"sources":["components/LibraryItem/index.module.scss","components/FieldItem/index..module.scss","components/FieldList/index.module.scss","components/Header/index.js","components/Header/Header.js","components/SearchBar/index.js","components/SearchBar/SearchBar.js","lib/services/swService.js","components/Loader/index.js","components/Loader/Loader.js","components/LibraryRoot/index.js","components/LibraryRoot/LibraryRoot.js","components/LibraryList/LibraryList.js","components/LibraryList/index.js","components/FieldItem/index.js","components/FieldItem/FieldItem.js","components/FieldList/index.js","components/FieldList/FieldList.js","components/LibraryItem/index.js","components/LibraryItem/LibraryItem.js","components/Page404/index.js","components/Page404/Page404.js","components/Home/index.js","components/Home/Home.js","components/Main/Main.js","components/Main/index.js","components/App/index.js","components/App/App.js","index.js"],"names":["module","exports","Header","className","to","exact","SearchBar","type","SWService","SW_BASE_URL","PERSON_IMG_URL","PLANET_IMG_URL","STARSHIP_IMG_URL","SW_CATEGORIES","people","data","modifyPerson","planets","modifyPlanet","starships","modifyStarship","stringWithId","match","baseUrl","id","personData","url","imageUrl","name","info","title","value","gender","birth_year","height","mass","planetData","rotation_period","climate","terrain","population","starshipData","model","length","passengers","hyperdrive_rating","getData","options","a","fetch","signal","res","json","getItemData","category","ctrl","getListData","results","map","Loader","LibraryRoot","state","loadedData","isLoading","isError","_fetchController","startLoading","setState","handleSucces","handleError","e","console","log","getLibraryData","dataUrl","categoryType","abort","AbortController","props","then","catch","this","params","nextProps","nextContext","prevProps","prevState","snapshot","Component","component","LibraryList","dataView","person","withRouter","FieldItem","fieldItem","classList","classNames","styles","field","cell","FieldList","fieldList","item","LibraryItem","imageContainer","image","src","alt","Page404","Home","sw","Main","path","render","App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.0129cd35.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"LibraryItem_item__caTgO\",\"title\":\"LibraryItem_title__3wyVI\",\"imageContainer\":\"LibraryItem_imageContainer__3gzaU\",\"image\":\"LibraryItem_image__2YdyY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"field\":\"index__field__1yLuk\",\"cell\":\"index__cell__2mWZ7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fieldItem\":\"FieldList_fieldItem__3rjlT\"};","import Header from \"./Header\";\n\nexport default Header;","import React from 'react';\nimport { NavLink } from \"react-router-dom\";\nimport './header.scss';\n\nconst Header = () => (\n    <header className=\"header\">\n        <div className=\"header__logo\"></div>\n        <nav className=\"header__nav nav\">\n            <ul className=\"nav__list\">\n                <li className=\"nav__item\"><NavLink className=\"nav__link\" to=\"/\" exact>Home</NavLink></li>\n                <li className=\"nav__item\"><NavLink className=\"nav__link\" to=\"/people\">People</NavLink></li>\n                <li className=\"nav__item\"><NavLink className=\"nav__link\" to=\"/planets\">Planets</NavLink></li>\n                <li className=\"nav__item\"><NavLink className=\"nav__link\" to=\"/starships\">Starships</NavLink></li>\n            </ul>\n        </nav>\n    </header>\n);\n\nexport default Header;","import SearchBar from \"./SearchBar\";\n\nexport default SearchBar;","import React from 'react';\nimport './searchBar.scss';\n\nconst SearchBar = () => {\n    return (\n        <div className=\"searchBar\">\n            <input type=\"text\" className=\"searchBar__input\"/>\n        </div>\n    );\n};\n\nexport default SearchBar;","class SWService {\n    #idTemplate = /\\/([0-9]+)\\//;\n    SW_BASE_URL = 'https://swapi.dev/api';\n    PERSON_IMG_URL = 'https://starwars-visualguide.com/assets/img/characters/';\n    PLANET_IMG_URL = 'https://starwars-visualguide.com/assets/img/planets/';\n    STARSHIP_IMG_URL = 'https://starwars-visualguide.com/assets/img/starships/';\n    SW_CATEGORIES = {\n        people: (data) => this.modifyPerson(data),\n        planets: (data) => this.modifyPlanet(data),\n        starships: (data) => this.modifyStarship(data),\n    };\n\n\n    #getItemId = (stringWithId) => {\n        return stringWithId.match(this.#idTemplate)[1];\n    };\n\n    #getImageUrl = (baseUrl, id) => baseUrl + id + '.jpg';\n\n    modifyPerson = (personData) => {\n        const id = this.#getItemId(personData.url);\n        const imageUrl = this.#getImageUrl(this.PERSON_IMG_URL, id);\n\n        return {\n            id,\n            imageUrl,\n            name: personData.name,\n            info: [\n                {id: 1, title: 'Name', value: personData.name},\n                {id: 2, title: 'Gender', value: personData.gender},\n                {id: 3, title: 'Year of birth', value: personData.birth_year},\n                {id: 4, title: 'Height', value: personData.height},\n                {id: 5, title: 'Mass', value: personData.mass},\n            ],\n        }\n    };\n\n    modifyPlanet = (planetData) => {\n        const id = this.#getItemId(planetData.url);\n        const imageUrl = this.#getImageUrl(this.PLANET_IMG_URL, id);\n\n        return {\n            id,\n            imageUrl,\n            name: planetData.name,\n            info: [\n                {id: 1, title: 'Name', value: planetData.name},\n                {id: 2, title: 'Rotation period', value: planetData.rotation_period},\n                {id: 3, title: 'Climate', value: planetData.climate},\n                {id: 4, title: 'Terrain', value: planetData.terrain},\n                {id: 5, title: 'Population', value: planetData.population},\n            ]\n        }\n    };\n\n    modifyStarship = (starshipData) => {\n        const id = this.#getItemId(starshipData.url);\n        const imageUrl = this.#getImageUrl(this.STARSHIP_IMG_URL, id);\n\n        return {\n            id,\n            imageUrl,\n            name: starshipData.name,\n            info: [\n                {id: 1, title: 'Name', value: starshipData.name},\n                {id: 2, title: 'Model', value: starshipData.model},\n                {id: 3, title: 'Length', value: starshipData.length},\n                {id: 4, title: 'Passengers', value: starshipData.passengers},\n                {id: 5, title: 'HyperDrive rating', value: starshipData.hyperdrive_rating},\n            ]\n        }\n    };\n\n    getData = async (url, options) => {\n        const res = await fetch(\n            this.SW_BASE_URL + url, {\n                signal: options.signal\n            });\n\n        return await res.json();\n    };\n\n    getItemData = async (url, category, ctrl) => {\n        const data = await this.getData(url, ctrl);\n\n        return this.SW_CATEGORIES[category](data);\n    };\n\n    getListData = async (url, category, ctrl) => {\n        const data = await this.getData(url, ctrl);\n\n        return data.results.map(this.SW_CATEGORIES[category])\n    };\n}\n\nexport default SWService;\n","import Loader from \"./Loader\";\n\nexport default Loader;","import React from 'react';\nimport './loader.scss';\n\nconst Loader = () => (\n    <div className=\"spinner\">\n       loading...\n    </div>\n);\n\nexport default Loader","import LibraryRoot from \"./LibraryRoot\";\n\nexport default LibraryRoot;","import React, { Component } from 'react';\nimport Loader from \"../Loader\";\n\nclass LibraryRoot extends Component {\n    state = {\n        loadedData: null,\n        isLoading: true,\n        isError: false,\n    };\n\n    _fetchController = null;\n\n    startLoading= () => {\n        this.setState({\n            loadedData: null,\n            isLoading: true,\n            isError: false\n        })\n    };\n\n    handleSucces = (data) => {\n        this.setState({\n            loadedData: data,\n            isLoading: false,\n            isError: false\n        })\n    };\n\n    handleError = (e) => {\n        if (e.name === 'AbortError') {\n            console.log('--- current fetch was aborted ----')\n\n            this.startLoading();\n            return;\n        }\n\n        this.setState({\n            isLoading: false,\n            isError: true,\n        })\n    };\n\n    getLibraryData = (dataUrl, categoryType) => {\n        if( this._fetchController ) {\n            this._fetchController.abort()\n        }\n\n        this._fetchController = new AbortController();\n        console.log('--- new controller was created ---')\n        this.props.getData(\n            dataUrl,\n            categoryType,\n            this._fetchController\n        )\n            .then(this.handleSucces)\n            .catch(this.handleError);\n    };\n\n    componentDidMount() {\n        const { url, params: { category } } = this.props.match;\n        this.getLibraryData(url, category);\n    }\n\n    componentWillReceiveProps(nextProps, nextContext) {\n        if(nextProps.match.url !== this.props.match.url) {\n          this.startLoading();\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.match.url !== this.props.match.url) {\n            const { url, params: { category } } = this.props.match;\n            this.getLibraryData(url, category);\n        }\n    }\n\n    componentWillUnmount() {\n        this._fetchController.abort();\n    }\n\n    render() {\n        const { isLoading, isError, loadedData } = this.state;\n        const {component: Component} = this.props;\n        console.log('render', this.state);\n\n        if (isError) {\n            return <div>error</div>\n        }\n        if (isLoading) {\n            return <Loader/>\n        }\n\n        return <Component data={loadedData}/>;\n    }\n}\n\nexport default LibraryRoot;","import React from 'react';\nimport { Link } from \"react-router-dom\";\n// import PropTypes from 'prop-types';\n\nconst LibraryList = ({ data = [], match }) => {\n    const { url } = match;\n    const dataView = data.map(person => (\n        <li className=\"libraryList__item\" key={ person.id }>\n            <Link className=\"libraryList__link\" to={url + '/' + person.id }>\n                { person.name }\n            </Link>\n        </li>));\n    return (\n        <ul className=\"libraryList\">\n            {\n                dataView.length\n                    ? dataView\n                    : <li className=\"libraryList__item\">no items</li>\n            }\n        </ul>\n    )\n   };\n\nexport default LibraryList;","import {withRouter} from \"react-router\";\nimport LibraryList from \"./LibraryList\";\n\nexport default withRouter(LibraryList);\n","import FieldItem from \"./FieldItem\";\n\nexport default FieldItem;\n","import React from 'react';\n// import PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport styles from './index..module.scss';\n\nconst FieldItem = ({ fieldItem, classList = ''}) => (\n    <li className={classNames(styles.field, classList)}>\n        <span className={styles.cell}>{ fieldItem.title }</span>\n        <span className={styles.cell}>{ fieldItem.value }</span>\n    </li>\n);\n\nexport default FieldItem;\n","import FieldList from \"./FieldList\";\n\nexport default FieldList;","import React from 'react';\n// import PropTypes from 'prop-types';\nimport FieldItem from \"../FieldItem\";\nimport classNames from 'classnames';\nimport styles from \"./index.module.scss\";\n\nconst FieldList = ({ fieldList, classList = ''}) =>(\n    <ul className={classNames(classList)}>\n        {\n            fieldList.map(item => <FieldItem\n                key={item.id}\n                fieldItem={item}\n                classList={styles.fieldItem}\n            />)\n        }\n    </ul>\n);\n\nexport default FieldList;","import LibraryItem from \"./LibraryItem\";\n\nexport default LibraryItem;","import React from 'react';\n// import PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport FieldList from \"../FieldList\";\n\nimport styles from './index.module.scss';\n\nconst LibraryItem = ({ data, classList = ''}) => {\n    const { info, name, imageUrl } = data;\n\n    return (\n        <div className={classNames(styles.item, classList)}>\n            <h2 className={styles.title}>{ name }</h2>\n            <div className={styles.imageContainer}>\n                <img className={styles.image}\n                     src={imageUrl}\n                     alt={name}\n                />\n            </div>\n            <FieldList fieldList={ info } />\n            <button className=\"backButton\" type=\"button\">&#60;&#60; Back</button>\n        </div>\n    )\n};\n\nexport default LibraryItem;","import Page404 from \"./Page404\";\n\nexport default Page404;\n","import React from 'react';\n// import PropTypes from 'prop-types';\n\nconst Page404 = () => (\n    <div>Page not found</div>\n);\n\nexport default Page404;","import Home from \"./Home\";\n\nexport default Home;","import React from 'react';\n// import PropTypes from 'prop-types';\n\nconst Home = () => (\n    <div>Welcome to StarWars library home page</div>\n);\n\nexport default Home;","import React from 'react';\nimport { Route, Switch } from \"react-router\";\nimport SWService from \"../../lib/services/swService\";\n\nimport LibraryRoot from \"../LibraryRoot\";\nimport LibraryList from \"../LibraryList\";\nimport LibraryItem from \"../LibraryItem\";\n\nimport Page404 from \"../Page404\";\nimport Home from \"../Home\";\n// import PropTypes from 'prop-types';\n\nconst sw = new SWService();\n\nconst Main = () => (\n    <main>\n        <Switch>\n            <Route path='/' exact component={ Home } />\n            <Route\n                exact\n                path='/:category/:id'\n                render={ ({match }) =>\n                    <LibraryRoot\n                        match={match}\n                        getData={sw.getItemData}\n                        component={LibraryItem}\n                    />\n                }/>\n\n            <Route\n                exact\n                path='/:category'\n                render={({match}) =>\n                   <LibraryRoot\n                        match={match}\n                        getData={sw.getListData}\n                        component={LibraryList}\n                   />\n               }/>\n            <Route component={Page404} />\n        </Switch>\n    </main>\n);\n\nexport default Main;","import Main from \"./Main\";\n\nexport default Main;","import App from \"./App\";\n\nexport default App;","import React from 'react';\n\nimport Header from \"../Header\";\nimport SearchBar from \"../SearchBar\";\nimport Main from \"../Main\";\n\nimport './app.scss';\n\n\nconst App  = () => {\n    return (\n        <div className=\"app\">\n            <Header/>\n            <SearchBar/>\n            <Main/>\n        </div>\n    )\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from \"react-router-dom\";\nimport App from './components/App';\nimport './index.scss';\n\nReactDOM.render(\n    <HashRouter>\n        <App />\n    </HashRouter>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}