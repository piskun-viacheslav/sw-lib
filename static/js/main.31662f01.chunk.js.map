{"version":3,"sources":["components/LibraryItem/index.module.scss","components/FieldItem/index..module.scss","components/FieldList/index.module.scss","components/Header/index.js","components/Header/Header.js","components/SearchBar/index.js","components/SearchBar/SearchBar.js","lib/services/swService.js","components/Loader/index.js","components/Loader/Loader.js","components/LibraryRoot/index.js","components/LibraryRoot/LibraryRoot.js","components/LibraryList/LibraryList.js","components/LibraryList/index.js","components/FieldItem/index.js","components/FieldItem/FieldItem.js","components/FieldList/index.js","components/FieldList/FieldList.js","components/LibraryItem/index.js","components/LibraryItem/LibraryItem.js","components/Page404/index.js","components/Page404/Page404.js","components/Home/index.js","components/Home/Home.js","components/Main/Main.js","components/Main/index.js","components/App/index.js","components/App/App.js","index.js"],"names":["module","exports","Header","className","to","exact","SearchBar","type","SWService","SW_BASE_URL","PERSON_IMG_URL","PLANET_IMG_URL","STARSHIP_IMG_URL","SW_CATEGORIES","people","data","modifyPerson","planets","modifyPlanet","starships","modifyStarship","stringWithId","match","baseUrl","id","personData","url","imageUrl","name","info","title","value","gender","birth_year","height","mass","planetData","rotation_period","climate","terrain","population","starshipData","model","length","passengers","hyperdrive_rating","getData","options","a","fetch","res","json","getItemData","category","getListData","results","map","Loader","LibraryRoot","state","loadedData","isLoading","isError","getLibraryData","dataUrl","categoryType","props","then","setState","catch","console","log","this","params","nextProps","nextContext","prevProps","prevState","snapshot","Component","component","LibraryList","dataView","person","withRouter","FieldItem","fieldItem","classList","classNames","styles","field","cell","FieldList","fieldList","item","LibraryItem","imageContainer","image","src","alt","Page404","Home","sw","Main","path","render","App","ReactDOM","basename","document","getElementById"],"mappings":"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","file":"static/js/main.31662f01.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"LibraryItem_item__caTgO\",\"title\":\"LibraryItem_title__3wyVI\",\"imageContainer\":\"LibraryItem_imageContainer__3gzaU\",\"image\":\"LibraryItem_image__2YdyY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"field\":\"index__field__1yLuk\",\"cell\":\"index__cell__2mWZ7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fieldItem\":\"FieldList_fieldItem__3rjlT\"};","import Header from \"./Header\";\n\nexport default Header;","import React from 'react';\nimport { NavLink } from \"react-router-dom\";\nimport './header.scss';\n\nconst Header = () => (\n    <header className=\"header\">\n        <div className=\"header__logo\"></div>\n        <nav className=\"header__nav nav\">\n            <ul className=\"nav__list\">\n                <li className=\"nav__item\"><NavLink className=\"nav__link\" to=\"/\" exact>Home</NavLink></li>\n                <li className=\"nav__item\"><NavLink className=\"nav__link\" to=\"/people\">People</NavLink></li>\n                <li className=\"nav__item\"><NavLink className=\"nav__link\" to=\"/planets\">Planets</NavLink></li>\n                <li className=\"nav__item\"><NavLink className=\"nav__link\" to=\"/starships\">Starships</NavLink></li>\n            </ul>\n        </nav>\n    </header>\n);\n\nexport default Header;","import SearchBar from \"./SearchBar\";\n\nexport default SearchBar;","import React from 'react';\nimport './searchBar.scss';\n\nconst SearchBar = () => {\n    return (\n        <div className=\"searchBar\">\n            <input type=\"text\" className=\"searchBar__input\"/>\n        </div>\n    );\n};\n\nexport default SearchBar;","class SWService {\n    #idTemplate = /\\/([0-9]+)\\//;\n    SW_BASE_URL = 'https://swapi.dev/api';\n    PERSON_IMG_URL = 'https://starwars-visualguide.com/assets/img/characters/';\n    PLANET_IMG_URL = 'https://starwars-visualguide.com/assets/img/planets/';\n    STARSHIP_IMG_URL = 'https://starwars-visualguide.com/assets/img/starships/';\n    SW_CATEGORIES = {\n        people: (data) => this.modifyPerson(data),\n        planets: (data) => this.modifyPlanet(data),\n        starships: (data) => this.modifyStarship(data),\n    };\n\n\n    #getItemId = (stringWithId) => {\n        return stringWithId.match(this.#idTemplate)[1];\n    };\n\n    #getImageUrl = (baseUrl, id) => baseUrl + id + '.jpg';\n\n    modifyPerson = (personData) => {\n        const id = this.#getItemId(personData.url);\n        const imageUrl = this.#getImageUrl(this.PERSON_IMG_URL, id);\n\n        return {\n            id,\n            imageUrl,\n            name: personData.name,\n            info: [\n                {id: 1, title: 'Name', value: personData.name},\n                {id: 2, title: 'Gender', value: personData.gender},\n                {id: 3, title: 'Year of birth', value: personData.birth_year},\n                {id: 4, title: 'Height', value: personData.height},\n                {id: 5, title: 'Mass', value: personData.mass},\n            ],\n        }\n    };\n\n    modifyPlanet = (planetData) => {\n        const id = this.#getItemId(planetData.url);\n        const imageUrl = this.#getImageUrl(this.PLANET_IMG_URL, id);\n\n        return {\n            id,\n            imageUrl,\n            name: planetData.name,\n            info: [\n                {id: 1, title: 'Name', value: planetData.name},\n                {id: 2, title: 'Rotation period', value: planetData.rotation_period},\n                {id: 3, title: 'Climate', value: planetData.climate},\n                {id: 4, title: 'Terrain', value: planetData.terrain},\n                {id: 5, title: 'Population', value: planetData.population},\n            ]\n        }\n    };\n\n    modifyStarship = (starshipData) => {\n        const id = this.#getItemId(starshipData.url);\n        const imageUrl = this.#getImageUrl(this.STARSHIP_IMG_URL, id);\n\n        return {\n            id,\n            imageUrl,\n            name: starshipData.name,\n            info: [\n                {id: 1, title: 'Name', value: starshipData.name},\n                {id: 2, title: 'Model', value: starshipData.model},\n                {id: 3, title: 'Length', value: starshipData.length},\n                {id: 4, title: 'Passengers', value: starshipData.passengers},\n                {id: 5, title: 'HyperDrive rating', value: starshipData.hyperdrive_rating},\n            ]\n        }\n    };\n\n    getData = async (url, options) => {\n        const res = await fetch(this.SW_BASE_URL + url, options);\n        return await res.json();\n    };\n\n    getItemData = async (url, category) => {\n        const data = await this.getData(url);\n        return this.SW_CATEGORIES[category](data);\n    };\n\n    getListData = async (url, category) => {\n        const data = await this.getData(url);\n        return data.results.map(this.SW_CATEGORIES[category])\n    };\n}\n\nexport default SWService;\n","import Loader from \"./Loader\";\n\nexport default Loader;","import React from 'react';\nimport './loader.scss';\n\nconst Loader = () => (\n    <div className=\"spinner\">\n       loading...\n    </div>\n);\n\nexport default Loader","import LibraryRoot from \"./LibraryRoot\";\n\nexport default LibraryRoot;","import React, { Component } from 'react';\nimport Loader from \"../Loader\";\n\nclass LibraryRoot extends Component {\n    state = {\n        loadedData: null,\n        isLoading: true,\n        isError: false,\n    };\n\n    getLibraryData = (dataUrl, categoryType) => {\n        this.props.getData(dataUrl, categoryType)\n            .then(data => {\n                this.setState({\n                    loadedData: data,\n                    isLoading: false,\n                    isError: false\n                })\n            })\n            .catch(() => this.setState({\n                isLoading: false,\n                isError: true,\n            }));\n    };\n\n    componentDidMount() {\n        console.log('componentDidMount()', this.state)\n        const { url, params: { category } } = this.props.match;\n        this.getLibraryData(url, category);\n    }\n\n    componentWillReceiveProps(nextProps, nextContext) {\n        if(nextProps.match.url !== this.props.match.url){\n            console.log('componentWillReceiveProps() before setState', this.state);\n            this.setState({\n                loadedData: null,\n                isLoading: true,\n                isError: false\n            })\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        console.log('componentDidUpdate() before if', this.state);\n        if (this.state.loadedData === null) {\n            console.log('componentDidUpdate() after if', this.state);\n\n            const { url, params: { category } } = this.props.match;\n            this.getLibraryData(url, category);\n        }\n    }\n\n    render() {\n        const { isLoading, isError, loadedData } = this.state;\n        const {component: Component} = this.props;\n        console.log('render', this.state);\n\n        if (isError) {\n            return <div>error</div>\n        }\n        if (isLoading) {\n            return <Loader/>\n        }\n\n        return <Component data={loadedData}/>;\n    }\n}\n\nexport default LibraryRoot;","import React from 'react';\nimport { Link } from \"react-router-dom\";\n// import PropTypes from 'prop-types';\n\nconst LibraryList = ({ data = [], match }) => {\n    const { url } = match;\n    const dataView = data.map(person => (\n        <li className=\"libraryList__item\" key={ person.id }>\n            <Link className=\"libraryList__link\" to={url + '/' + person.id }>\n                { person.name }\n            </Link>\n        </li>));\n    return (\n        <ul className=\"libraryList\">\n            {\n                dataView.length\n                    ? dataView\n                    : <li className=\"libraryList__item\">no items</li>\n            }\n        </ul>\n    )\n   };\n\nexport default LibraryList;","import {withRouter} from \"react-router\";\nimport LibraryList from \"./LibraryList\";\n\nexport default withRouter(LibraryList);\n","import FieldItem from \"./FieldItem\";\n\nexport default FieldItem;\n","import React from 'react';\n// import PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport styles from './index..module.scss';\n\nconst FieldItem = ({ fieldItem, classList = ''}) => (\n    <li className={classNames(styles.field, classList)}>\n        <span className={styles.cell}>{ fieldItem.title }</span>\n        <span className={styles.cell}>{ fieldItem.value }</span>\n    </li>\n);\n\nexport default FieldItem;\n","import FieldList from \"./FieldList\";\n\nexport default FieldList;","import React from 'react';\n// import PropTypes from 'prop-types';\nimport FieldItem from \"../FieldItem\";\nimport classNames from 'classnames';\nimport styles from \"./index.module.scss\";\n\nconst FieldList = ({ fieldList, classList = ''}) =>(\n    <ul className={classNames(classList)}>\n        {\n            fieldList.map(item => <FieldItem\n                key={item.id}\n                fieldItem={item}\n                classList={styles.fieldItem}\n            />)\n        }\n    </ul>\n);\n\nexport default FieldList;","import LibraryItem from \"./LibraryItem\";\n\nexport default LibraryItem;","import React from 'react';\n// import PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport FieldList from \"../FieldList\";\n\nimport styles from './index.module.scss';\n\nconst LibraryItem = ({ data, classList = ''}) => {\n    const { info, name, imageUrl } = data;\n\n    return (\n        <div className={classNames(styles.item, classList)}>\n            <h2 className={styles.title}>{ name }</h2>\n            <div className={styles.imageContainer}>\n                <img className={styles.image}\n                     src={imageUrl}\n                     alt={name}\n                />\n            </div>\n            <FieldList fieldList={ info } />\n            <button className=\"backButton\" type=\"button\">&#60;&#60; Back</button>\n        </div>\n    )\n};\n\nexport default LibraryItem;","import Page404 from \"./Page404\";\n\nexport default Page404;\n","import React from 'react';\n// import PropTypes from 'prop-types';\n\nconst Page404 = () => (\n    <div>Page not found</div>\n);\n\nexport default Page404;","import Home from \"./Home\";\n\nexport default Home;","import React from 'react';\n// import PropTypes from 'prop-types';\n\nconst Home = () => (\n    <div>Welcome to StarWars library home page</div>\n);\n\nexport default Home;","import React from 'react';\nimport { Route, Switch } from \"react-router\";\nimport SWService from \"../../lib/services/swService\";\n\nimport LibraryRoot from \"../LibraryRoot\";\nimport LibraryList from \"../LibraryList\";\nimport LibraryItem from \"../LibraryItem\";\n\nimport Page404 from \"../Page404\";\nimport Home from \"../Home\";\n// import PropTypes from 'prop-types';\n\nconst sw = new SWService();\n\nconst Main = () => (\n    <main>\n        <Switch>\n            <Route path='/' exact component={ Home } />\n            <Route\n                exact\n                path='/:category/:id'\n                render={ ({match }) =>\n                    <LibraryRoot\n                        match={match}\n                        getData={sw.getItemData}\n                        component={LibraryItem}\n                    />\n                }/>\n\n            <Route\n                exact\n                path='/:category'\n                render={({match}) =>\n                   <LibraryRoot\n                        match={match}\n                        getData={sw.getListData}\n                        component={LibraryList}\n                   />\n               }/>\n            <Route component={Page404} />\n        </Switch>\n    </main>\n);\n\nexport default Main;","import Main from \"./Main\";\n\nexport default Main;","import App from \"./App\";\n\nexport default App;","import React from 'react';\n\nimport Header from \"../Header\";\nimport SearchBar from \"../SearchBar\";\nimport Main from \"../Main\";\n\nimport './app.scss';\n\n\nconst App  = () => {\n    return (\n        <div className=\"app\">\n            <Header/>\n            <SearchBar/>\n            <Main/>\n        </div>\n    )\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from \"react-router-dom\";\nimport App from './components/App';\nimport './index.scss';\n\nReactDOM.render(\n    <HashRouter basename='/'>\n        <App />\n    </HashRouter>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}